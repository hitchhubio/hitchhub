import R from"camelcase";import H from"style-dictionary";import{createPropertyFormatter as w,fileHeader as k}from"style-dictionary/utils";import b from"camelcase";import{fileHeader as $}from"style-dictionary/utils";function d({tokens:e,camelCase:r}){return e.map(t=>{if(!t.name)throw new Error("Token has no name.");return{name:r?b(t.name):b(t.name,{pascalCase:!0}),value:t.$value}})}async function g({dictionary:e,platform:r,options:t,file:o}){let a=await $({file:o}),s=d({tokens:e.allTokens,camelCase:t.camelCase??!1}).map(i=>`export const ${i.name} = ${JSON.stringify(i.value)};`);return[a,...s,""].join(`
`)}async function y({dictionary:e,platform:r,options:t,file:o}){let a=await k({file:o}),s=w({outputReferences:!0,outputReferenceFallbacks:!1,dictionary:e,format:"css",formatting:{},themeable:!1,usesDtcg:!0}),n=e.allTokens.map(m=>s(m)),i=d({tokens:e.allTokens,camelCase:!0}),u=n.map(m=>`var(${m.slice(0,Math.max(0,m.indexOf(":"))).trim()})`);if(i.length!==u.length)throw new Error(`Number of tokens (${i.length}) does not match number of variable names (${u.length}).`);let l=i.map((m,S)=>`export const ${m.name} = '${u[S]}';`);return[a,...l,""].join(`
`)}import v from"lodash/cloneDeepWith.js";import{createPropertyFormatter as O,fileHeader as j}from"style-dictionary/utils";function N(e){return e!=null&&Object.prototype.hasOwnProperty.call(e,"name")&&Object.prototype.hasOwnProperty.call(e,"original")}async function F({dictionary:e,platform:r,options:t,file:o}){if(!t.exportName)throw new Error("Missing exportName option.");let a=O({outputReferences:!0,outputReferenceFallbacks:!1,dictionary:e,format:"css",formatting:{},themeable:!1,usesDtcg:!0}),s=v(e.tokens,l=>{if(N(l)){let f=a(l);return`var(${f.slice(0,Math.max(0,f.indexOf(":"))).trim()})`}}),n=JSON.stringify(s,null,2);return[await j({file:o}),...t.header?[t.header]:[],"",t.exportType?`export const ${t.exportName}: ${t.exportType} = ${n};`:`export const ${t.exportName} = ${n};`,""].join(`
`)}import{usesReferences as V}from"style-dictionary/utils";function p({tokens:e,outputReferences:r}){if(r&&typeof r!="boolean")throw new Error("outputReferences must be a boolean.");if(typeof e!="object"||Array.isArray(e))return e;let t={};if(Object.prototype.hasOwnProperty.call(e,"original"))return r&&V(e.original.$value)?{$type:e.original.$type,$value:e.original.$value}:{$type:e.$type,$value:e.$value};for(let o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=p({tokens:e[o],outputReferences:r}));return t}async function x({dictionary:e,platform:r,options:t,file:o}){let a=p({tokens:e.tokens,outputReferences:t.outputReferences});return`${JSON.stringify(a,null,2)}`}import{fileHeader as P}from"style-dictionary/utils";async function h({dictionary:e,platform:r,options:t,file:o}){if(!t.exportName)throw new Error("Missing exportName option.");let a=p({tokens:e.tokens,outputReferences:t.outputReferences}),s=JSON.stringify(a,null,2);return[await P({file:o}),...t.header?[t.header]:[],"",t.exportType?`export const ${t.exportName}: ${t.exportType} = ${s};`:`export const ${t.exportName} = ${s};`,""].join(`
`)}function c(e){return e&&(e.endsWith("/")?e:`${e}/`)}function A(e){let r={};return e.css&&(r.css={transformGroup:"css/custom",buildPath:c(e.css.outputFolder),prefix:e.css.prefix,files:[{format:"css/variables",destination:e.css.outputFilename}],options:{showFileHeader:!1,selector:e.css.selector,outputReferences:!0}}),e.cssVariableObject&&(r.cssVariableObject={transformGroup:"css/custom",buildPath:c(e.cssVariableObject.outputFolder),prefix:e.cssVariableObject.prefix,files:[{format:"css/variable-object",destination:e.cssVariableObject.outputFilename}],options:{fileHeader:"auto-generated",exportName:e.cssVariableObject.exportName,exportType:e.cssVariableObject.exportType}}),e.cssVariableConsts&&(r.cssVariableConsts={transformGroup:"css/custom",buildPath:c(e.cssVariableConsts.outputFolder),prefix:e.cssVariableConsts.prefix,files:[{format:"css/variable-consts",destination:e.cssVariableConsts.outputFilename}],options:{fileHeader:"auto-generated",camelCase:e.cssVariableConsts.camelCase}}),e.typeScript&&(r.typeScript={transformGroup:"js",buildPath:c(e.typeScript.outputFolder),files:[{format:"typeScript/object",destination:e.typeScript.outputFilename}],options:{fileHeader:"auto-generated",outputReferences:e.typeScript.outputReferences,header:e.typeScript.header,exportName:e.typeScript.exportName,exportType:e.typeScript.exportType}}),e.typeScriptConsts&&(r.typeScriptConsts={transformGroup:"typeScript/consts",buildPath:c(e.typeScriptConsts.outputFolder),prefix:e.typeScriptConsts.prefix,files:[{format:"typeScript/consts",destination:e.typeScriptConsts.outputFilename}],options:{fileHeader:"auto-generated",camelCase:e.typeScriptConsts.camelCase}}),e.dtcg&&(r.dtcg={transformGroup:"js",buildPath:c(e.dtcg.outputFolder),files:[{format:"dtcg",destination:e.dtcg.outputFilename}],options:{outputReferences:!0}}),e.figma&&(r.figma={transformGroup:"figma",buildPath:c(e.figma.outputFolder),files:[{format:"figma",destination:e.figma.outputFilename}],options:{outputReferences:!0}}),r}function T({format:e}){return function(r){if(!r.name)throw new Error("Token has no name.");if(!r.attributes?.category)throw new Error(`Token ${r.name} has no category.`);let t=r.attributes?.category;if(!["primitive","semantic","component"].includes(t))throw new Error(`Token ${r.name} has an invalid category '${t}'.`);return e==="pascal"?r.name.replace(R(t,{pascalCase:!0}),""):r.name.replace(`-${t}-`,"-")}}async function G({source:e,tokens:r,platforms:t}){let o={source:e,tokens:r,platforms:A(t)},a=new H(o,{verbosity:"verbose"});a.registerFileHeader({name:"auto-generated",fileHeader(){return["This file was auto-generated."]}}),a.registerTransform({name:"name/remove-tier-kebab",type:"name",filter(){return!0},transform:T({format:"kebab"})}),a.registerTransform({name:"name/remove-tier-pascal",type:"name",filter(){return!0},transform:T({format:"pascal"})}),a.registerTransform({name:"lineHeight/percentage",type:"value",filter(s){return s.attributes?.item==="lineHeight"},transform(s){return`${Math.round(s.$value*100)}%`}}),a.registerTransform({name:"letterSpacing/em",type:"value",filter(s){return s.attributes?.item==="letterSpacing"},transform(s){return`${Number(s.$value.replace("rem",""))}em`}}),a.registerTransform({name:"letterSpacing/percentage",type:"value",filter(s){return s.attributes?.item==="letterSpacing"},transform(s){return`${Number(s.$value.replace("rem",""))*100}%`}}),a.registerTransform({name:"fontSize/px",type:"value",filter:s=>s.attributes?.type==="font"&&s.attributes?.item==="size",transform:s=>`${Number(s.$value.replace("rem",""))*16}px`}),a.registerTransformGroup({name:"css/custom",transforms:["attribute/cti","name/kebab","fontFamily/css","typography/css/shorthand","shadow/css/shorthand","name/remove-tier-kebab","letterSpacing/em"]}),a.registerTransformGroup({name:"typeScript/consts",transforms:["attribute/cti","name/pascal","name/remove-tier-pascal"]}),a.registerTransformGroup({name:"figma",transforms:["attribute/cti","name/pascal","size/rem","lineHeight/percentage","color/hex","fontFamily/css","shadow/css/shorthand","letterSpacing/percentage","fontSize/px"]}),a.registerFormat({name:"dtcg",format:x}),a.registerFormat({name:"typeScript/object",format:h}),a.registerFormat({name:"typeScript/consts",format:g}),a.registerFormat({name:"css/variable-object",format:F}),a.registerFormat({name:"css/variable-consts",format:y}),await a.buildAllPlatforms()}async function ie({source:e=[],tokens:r={},platforms:t}){await G({source:e,tokens:r,platforms:t})}export{ie as buildTokens};
//# sourceMappingURL=index.js.map